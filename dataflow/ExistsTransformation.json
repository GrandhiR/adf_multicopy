{
	"name": "ExistsTransformation",
	"properties": {
		"folder": {
			"name": "Mapping Data Flows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "mycontainer",
						"type": "DatasetReference"
					},
					"name": "SalesSource"
				},
				{
					"dataset": {
						"referenceName": "mycontainer",
						"type": "DatasetReference"
					},
					"name": "CustomerSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Datalake",
						"type": "DatasetReference"
					},
					"name": "ADLS"
				}
			],
			"transformations": [
				{
					"name": "CustomerExists"
				}
			],
			"script": "source(output(\n\t\tRow as short,\n\t\tCountry as string,\n\t\tYear as short,\n\t\tSales as short,\n\t\tCust_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:['Sales_Join_left.csv'],\n\tpartitionBy('hash', 1)) ~> SalesSource\nsource(output(\n\t\tCust_id as string,\n\t\tCountry as string,\n\t\tName as string,\n\t\tAge as short,\n\t\tSex as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:['Customer_Join_Right.csv'],\n\tpartitionBy('hash', 1)) ~> CustomerSource\nSalesSource, CustomerSource exists(SalesSource@Cust_id == CustomerSource@Cust_id,\n\tnegate:false,\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> CustomerExists\nCustomerExists sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SalesWithCustomers.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ADLS"
		}
	}
}